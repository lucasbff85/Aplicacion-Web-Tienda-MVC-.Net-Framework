
@{
    ViewBag.Title = "Producto";
    Layout = "~/Views/Shared/VistaAdministrador.cshtml";
}


<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Mantenimiento</a></li>
    <li class="breadcrumb-item active">Productos</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fas fa-boxes me-1"></i> Lista de Productos
        <!-- para poner icono de usuarios -->

    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal(null)">Crear Nuevo</button>
            </div>
        </div>

        <hr />

        <table id="tabla" class="display cell-border " style="width: 100%">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Marca</th>
                    <th>Categoría</th>
                    <th>Precio</th>
                    <th>Stock</th>
                    <th>Activo</th>

                    <th></th>

                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>


    </div>
</div>


<!-- Modal------data-bs-backdrow=static para que no se cierre si toco afuera -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <input id="txtid" type="hidden" value="0" />


                <form id="contenedor" class="row">
                    <div class="col-sm-3">
                        <div class="mb-2">
                            <img id="img_producto" height="197" width="200" class="border mx-auto d-block img-fluid" />
                        </div>
                        <div class="mb-2">
                            <input class="form-control" type="file" id="fileProducto" accept="image/png, image/jpg, image/jpeg" onchange="mostrarImagen(this)" />
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="mb-3">
                            <label class="form-label">Nombre</label>
                            <input type="text" class="form-control" id="txtnombre" name="nombre" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Descripción</label>
                            <textarea type="text" class="form-control" id="txtdescripcion" name="descripcion" style="height:125px; resize:none"></textarea>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="mb-3">
                            <label class="form-label">Marca</label>
                            <select id="cbomarca" class="form-select"></select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Categoría</label>
                            <select id="cbocategoria" class="form-select"></select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Precio</label>
                            <input type="text" class="form-control" id="txtprecio" name="precio" autocomplete="off" />
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="mb-3">
                            <label class="form-label">Stock</label>
                            <input type="number" class="form-control" id="txtstock" name="stock" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Activo</label>
                            <select id="cboactivo" class="form-select">
                                <option value="1">Si</option>
                                <option value="0">No</option>
                            </select>
                        </div>
                    </div>

                </form>



                <!--Mensaje de alerta-->
                <div class="row mt-2">
                    <div class="col-12">
                        <div id="mensajeError" class="alert alert-danger" role="alert">
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary elemento" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary elemento" onclick="Guardar()">Guardar</button>
                </div>
            </div>

        </div>

    </div>

</div>


@section scripts{  <!-- esto lo va pasar a la master page-->
    <script>

        var tabladata;
        var filaSeleccionada;

        function mostrarImagen(input) {
            //pregunto si el input tiene archivos
            if (input.files) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#img_producto").attr("src", e.target.result).width(200).height(197)
                }
                reader.readAsDataURL(input.files[0]);
            }
        }


        tabladata = $("#tabla").DataTable({
             responsive: true,
             ordering: false,
             "ajax": {
                  url: '@Url.Action("ListarProductos", "Editor")',
                  type: "GET",
                  dataType: "json"
             },
            "columns": [
                { "data": "Nombre" },
                {
                    "data": "Descripcion",
                    "render": function (data, type, row) {
                        // Truncar la descripción si es demasiado larga
                        var maxLength = 50; // Cambia el número de caracteres visibles
                        if (data.length > maxLength) {
                            return `<span title="${data}">${data.substring(0, maxLength)}...</span>`;
                        }
                        return data;
                    }
                },
                {
                    "data": "oMarca", "render": function (data) {
                        return data.Descripcion
                    }
                },
                {
                    "data": "oCategoria", "render": function (data) {
                        return data.Descripcion
                    }
                },
                { 
                    "data": "Precio", "render": function (data) {
                        return parseFloat(data).toLocaleString('es-AR', { style: 'currency', currency: 'ARS' });
                    }
                },
                { "data": "Stock" },
                 {
                     "data": "Activo", "render": function (valor) {
                         if (valor) {
                             return '<span class="badge bg-success">Si</span>'
                         } else {
                             return '<span class="badge bg-danger">No</span>'
                         }
                     }
                 },
                 {
                     "defaultContent": '<button type="button" class="btn btn-primary btn-sm btn-editar elemento"> <i class="fas fa-pen me-1"></i></button>' +
                         '<button type="button" class="btn btn-danger btn-sm ms-2 btn-eliminar elemento"> <i class="fas fa-trash me-1"></i></button>',
                     "orderable": false,  //que esa columna no sea ordenada de mayor a menor porque solo contiene botones
                     "searchable": false, //que no se involucre en los filtros
                     "width": "90px"
                 }

                ],
                "language": {
                    "url":"https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json"
                },
                "createdRow": function (row, data, dataIndex) {
                    $(row).find(".btn-editar, .btn-eliminar").addClass("elemento");
                }
        });

        jQuery.ajax({
            url: '@Url.Action("ListarMarcas","Editor")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
               //console.log(data)

                $("<option>").attr({ "value": "0","disabled":"true" }).text("seleccionar").appendTo("#cbomarca");

                //for each en ajax: el primer data es el de la funcion de success y el segundo es de la funcion
                //ListarMarcas del Mantenedor
                $.each(data.data, function (index, valor) {
                    $("<option>").attr({ "value": valor.Id }).text(valor.Descripcion).appendTo("#cbomarca");
                })

            },
            error: function (error) {
                console.log(error)
            }
        });

        jQuery.ajax({
        url: '@Url.Action("ListarCategorias","Editor")',
        type: "GET",
        data: null,
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (data) {
       //console.log(data)

        $("<option>").attr({ "value": "0","disabled":"true" }).text("seleccionar").appendTo("#cbocategoria");

        //for each en ajax: el primer data es el de la funcion de success y el segundo es de la funcion
        //ListarMarcas del Mantenedor
        $.each(data.data, function (index, valor) {
            $("<option>").attr({ "value": valor.Id }).text(valor.Descripcion).appendTo("#cbocategoria");
        })

        },
        error: function (error) {
        console.log(error)
        }
        });



        //jQuery.validator.addMethod("precioDecimal", function (value, element) {
        //    return this.optional(element) || /^\d{0,4}(\.\d{0,2})?$/i.test(value);
        //}, "El formato correcto del precio es ##.##");

        jQuery.validator.addMethod("precioDecimal", function (value, element) {
            return this.optional(element) || /^\d{1,3}(\.\d{3})*(,\d{0,2})?$/.test(value);
        }, "El formato correcto del precio es ##.###,##");




        


        //convertir el decimal a precio arg
        //CultureInfo argentina = new CultureInfo("es-AR");
        //string precioFormateado = precioDecimal.ToString("C", argentina);


        $("#contenedor").validate({
            //llamamos por la propiedad name
            rules: {
                nombre: {
                    required: true
                },
                descripcion: {
                    required: true
                },
                precio: {
                    //precioDecimal debe estar como una regla en el precio
                    required: true,
                    precioDecimal: true
                },
                stock: {
                    required: true,
                    number: true
                }
            },
            messages: {
                nombre: "El campo nombre es obligatorio",
                descripcion: "El campo descripción es obligatorio",
                precio: { required: "El campo precio es obligatorio", precioDecimal: "El formato correcto del precio es #.###,##" },
                stock: { required: "El campo stock es obligatorio", number: "Debe ingresar sólo números en el stock" }

            },
            errorElement: "div",
            errorLabelContainer: ".alert-danger"
            //esto quiere decir que los mensajes de errores los muestra en el div que tiene la clase alert-danger

            //en la consola del navegador(F12) podemos poner $("#contenedor").valid() para probar las validaciones

        })



        function abrirModal(json) {   //recibe objeto formato json, tambien puede ir otro nombre como data

            //limpiar datos
            $("#txtid").val(0);
            $("#img_producto").removeAttr("src");
            $("#fileProducto").val("");
            $("#txtnombre").val("");
            $("#txtdescripcion").val("");
            $("#cbomarca").val($("#cbomarca option:first").val());
            $("#cbocategoria").val($("#cbocategoria option:first").val());
            $("#txtprecio").val("");
            $("#txtstock").val("");
            $("#cboactivo").val(1);
            $("#mensajeError").hide();

            //SI HAY ALGO SELECCIONADO, LO CARGA:    
            if (json != null) {
                $("#txtid").val(json.Id);
                $("#txtnombre").val(json.Nombre);
                $("#txtdescripcion").val(json.Descripcion);
                $("#cbomarca").val(json.oMarca.Id);
                $("#cbocategoria").val(json.oCategoria.Id);

                
                // Convertir el decimal a precio argentino usando JavaScript
               var precio = json.Precio.toLocaleString('es-AR');

                //precioFormateado = json.Precio.ToString("#,##0.00", new CultureInfo("es-AR"));


                $("#txtprecio").val(precio);

                $("#txtstock").val(json.Stock);
                $("#cboactivo").val(json.Activo == true ? 1 : 0);


                jQuery.ajax({
                    url: '@Url.Action("ImagenProducto","Editor")',
                    type: "POST",
                    data: JSON.stringify({ id: json.Id }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        $("#img_producto").LoadingOverlay("hide");

                        if (data.conversion) {
                            $("#img_producto").attr({ "src": "data:image/" + data.extension + ";base64," + data.textoBase64 });
                        }
                    },
                    error: function (error) {
                        $("#img_producto").LoadingOverlay("hide");
                        $("#mensajeError").show();
                        $("#mensajeError").text("Error al mostrar la imagen.");

                    },
                    beforeSend: function () {
                        $("#img_producto").LoadingOverlay("show"); //mostramos que esta cargando
                    }

                });

            }



            $("#FormModal").modal("show");
        }

        $("#tabla tbody").on("click", '.btn-editar', function () {

            filaSeleccionada = $(this).closest("tr");

            var data = tabladata.row(filaSeleccionada).data();

            abrirModal(data)

        })

        $("#tabla tbody").on("click", '.btn-eliminar', function () {

            var productoSeleccionado = $(this).closest("tr");

            var data = tabladata.row(productoSeleccionado).data();


            //ver documentacion de sweet alert...
            swal({
                title: "Está seguro?",
                text: "Desea eliminar el producto?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {
               jQuery.ajax({
                   url: '@Url.Action("EliminarProducto","Editor")',
                   type: "POST",
                   data: JSON.stringify({ id: data.Id }),
                   dataType: "json",
                   contentType: "application/json; charset=utf-8",
                   success: function (data) {  //este data es distinto, almacena la respuesta de eliminar usuario de HomeController
                       //data y resultado son valores que maneja en el mantenedor
                       if (data.resultado) {

                           tabladata.row(productoSeleccionado).remove().draw();
                           //tabladata.ajax.reload(null, false); para recargar desde el servidor

                       } else {
                            swal("No se pudo eliminar", data.mensaje, "error")
                       }


                   },
                   error: function (error) {
                       console.log(error)
                   }

               });
            });

        });

        function Guardar() {

            //validaciones
            if (!$("#contenedor").valid()) {
                return;  //no continua
            }


            var ImagenSeleccionada = $("#fileProducto")[0].files[0];


            //FORMAMOS EL PRODUCTO CON SUS DATOS
            var Producto = {
                Id: $("#txtid").val(),
                Nombre: $("#txtnombre").val(),
                Descripcion: $("#txtdescripcion").val(),
                oMarca: {
                    Id: $("#cbomarca option:selected").val(),
                    Descripcion: $("#cbomarca option:selected").text()
                },
                oCategoria: {
                    Id: $("#cbocategoria option:selected").val(),
                    Descripcion: $("#cbocategoria option:selected").text()
                },
                Precio: parseFloat($("#txtprecio").val().replace(/\./g, '').replace(',', '.')),

                Stock: $("#txtstock").val(),
                Activo: $("#cboactivo").val() == 1 ? true : false
            }


            //para pasar archivos a metodos, tenemos q trabajar con FormData

            var request = new FormData();
            // tiene que ser el mismo nombre que se le asigna como parametro al metodo, en este caso objeto
            request.append("objeto", JSON.stringify(Producto))
            request.append("archivoImagen", ImagenSeleccionada)


            jQuery.ajax({
                url: '@Url.Action("GuardarProducto","Editor")',
                type: "POST",
                //convierte el valor a texto
                data: request,
                processData: false,
                contentType: false,
                //el ajax tiene estos tres metodos:
                success: function (data) {   //puede ser data o cualquier nombre y hace referencia a (new { resultado = resultado, mensaje = mensaje }

                    $(".modal-body").LoadingOverlay("hide");

                    //PEODUCTO NUEVO
                    if (Producto.Id == 0) {

                        if (data.idGenerado != 0) {  //idGenerado es lo que devuelve el metodo
                            Producto.Id = data.idGenerado;
                            tabladata.row.add(Producto).draw(false);
                            $("#FormModal").modal("hide");
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }



                    } else {
                        //PRODUCTO EDITAR
                        if (data.operacion_exitosa) {
                            tabladata.row(filaSeleccionada).data(Producto).draw(false);
                            filaSeleccionada = null;
                            $("#FormModal").modal("hide");
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }



                    }
                },
                error: function (error) {
                    $(".modal-body").LoadingOverlay("hide");
                    $("#mensajeError").text("Error ajax");
                    $("#mensajeError").show();
                },
                beforeSend: function () {
                    //mostramos algo mientras se lleva a cabo la operacion
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,   //tamaño de la img
                        text: "Cargando...",
                        size: 14    //tamaño del texto
                    })
                },
            });







        }

    </script>
}

